// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

import 'globals.dart' as globals;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions web = FirebaseOptions(
    apiKey: globals.apiKey,
    appId: globals.appId,
    messagingSenderId: globals.messagingSenderId,
    projectId: globals.projectId,
    authDomain: globals.authDomain,
    storageBucket: globals.storageBucket,
    measurementId: globals.measurementId,
  );

  static FirebaseOptions android = FirebaseOptions(
    apiKey: globals.apiKey,
    appId: globals.appId,
    messagingSenderId: globals.messagingSenderId,
    projectId: globals.projectId,
    storageBucket: globals.storageBucket,
  );

  static FirebaseOptions ios = FirebaseOptions(
    apiKey: globals.apiKey,
    appId: globals.appId,
    messagingSenderId: globals.messagingSenderId,
    projectId: globals.projectId,
    storageBucket: globals.storageBucket,
    iosBundleId: globals.iosBundleId,
  );

  static FirebaseOptions macos = FirebaseOptions(
    apiKey: globals.apiKey,
    appId: globals.appId,
    messagingSenderId: globals.messagingSenderId,
    projectId: globals.projectId,
    storageBucket: globals.storageBucket,
    iosBundleId: globals.iosBundleId,
  );
}
